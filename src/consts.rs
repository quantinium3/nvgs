pub const VERSION: &str = "0.1";

pub const CACHE_PATH: &str = "/var/cache/nvgs/nvgs.cache";

pub const NVIDIA_BLACKLIST_PATH: &str = "/etc/modprobe.d/blacklist-nvidia.conf";
pub const NVIDIA_BLACKLIST_CONTENT: &str = r#"
# generated by nvgs

blacklist nouveau
blacklist nvidia
blacklist nvidia_drm
blacklist nvidia_uvm
blacklist nvidia_modeset
blacklist nvidia_current
blacklist nvidia_current_drm
blacklist nvidia_current_uvm
blacklist nvidia_current_modeset
blacklist i2c_nvidia_gpu
alias nouveau off
alias nvidia off
alias nvidia_drm off
alias nvidia_uvm off
alias nvidia_modeset off
alias nvidia_current off
alias nvidia_current_drm off
alias nvidia_current_uvm off
alias nvidia_current_modeset off
alias i2c_nvidia_gpu off
"#;

pub const UDEV_PATH: &str = "/etc/udev/rules.d/50-remove-nvidia.rules";
pub const UDEV_INTEGRATED: &str = r#"
# generated by nvgs

# Remove NVIDIA USB xHCI Host Controller devices, if present
ACTION=="add", SUBSYSTEM=="pci", ATTR{vendor}=="0x10de", ATTR{class}=="0x0c0330", ATTR{power/control}="auto", ATTR{remove}="1"

# Remove NVIDIA USB Type-C UCSI devices, if present
ACTION=="add", SUBSYSTEM=="pci", ATTR{vendor}=="0x10de", ATTR{class}=="0x0c8000", ATTR{power/control}="auto", ATTR{remove}="1"

# Remove NVIDIA Audio devices, if present
ACTION=="add", SUBSYSTEM=="pci", ATTR{vendor}=="0x10de", ATTR{class}=="0x040300", ATTR{power/control}="auto", ATTR{remove}="1"

# Remove NVIDIA VGA/3D controller devices
ACTION=="add", SUBSYSTEM=="pci", ATTR{vendor}=="0x10de", ATTR{class}=="0x03[0-9]*", ATTR{power/control}="auto", ATTR{remove}="1"
"#;
pub const UDEV_PM_PATH: &str = "/etc/udev/rules.d/80-nvidia-pm.rules";
pub const UDEV_PM_CONTENT: &str = r#"
# generated by nvgs

# Remove NVIDIA USB xHCI Host Controller devices, if present
ACTION=="add", SUBSYSTEM=="pci", ATTR{vendor}=="0x10de", ATTR{class}=="0x0c0330", ATTR{remove}="1"

# Remove NVIDIA USB Type-C UCSI devices, if present
ACTION=="add", SUBSYSTEM=="pci", ATTR{vendor}=="0x10de", ATTR{class}=="0x0c8000", ATTR{remove}="1"

# Remove NVIDIA Audio devices, if present
ACTION=="add", SUBSYSTEM=="pci", ATTR{vendor}=="0x10de", ATTR{class}=="0x040300", ATTR{remove}="1"

# Enable runtime PM for NVIDIA VGA/3D controller devices on driver bind
ACTION=="bind", SUBSYSTEM=="pci", ATTR{vendor}=="0x10de", ATTR{class}=="0x030000", TEST=="power/control", ATTR{power/control}="auto"
ACTION=="bind", SUBSYSTEM=="pci", ATTR{vendor}=="0x10de", ATTR{class}=="0x030200", TEST=="power/control", ATTR{power/control}="auto"

# Disable runtime PM for NVIDIA VGA/3D controller devices on driver unbind
ACTION=="unbind", SUBSYSTEM=="pci", ATTR{vendor}=="0x10de", ATTR{class}=="0x030000", TEST=="power/control", ATTR{power/control}="on"
ACTION=="unbind", SUBSYSTEM=="pci", ATTR{vendor}=="0x10de", ATTR{class}=="0x030200", TEST=="power/control", ATTR{power/control}="on"
"#;

pub const XORG_PATH: &str = "/etc/X11/xorg.conf";
pub const XORG_INTEL: &str = r#"
# generated by nvgs

Section "ServerLayout"
    Identifier "layout"
    Screen 0 "nvidia"
    Inactive "intel"
EndSection

Section "Device"
    Identifier "nvidia"
    Driver "nvidia"
    BusID "{}"
EndSection

Section "Screen"
    Identifier "nvidia"
    Device "nvidia"
    Option "AllowEmptyInitialConfiguration"
EndSection

Section "Device"
    Identifier "intel"
    Driver "modesetting"
EndSection

Section "Screen"
    Identifier "intel"
    Device "intel"
EndSection
"#;
pub const XORG_AMD: &str = r#"
# generated by nvgs

Section "ServerLayout"
    Identifier "layout"
    Screen 0 "nvidia"
    Inactive "amdgpu"
EndSection

Section "Device"
    Identifier "nvidia"
    Driver "nvidia"
    BusID "{}"
EndSection

Section "Screen"
    Identifier "nvidia"
    Device "nvidia"
    Option "AllowEmptyInitialConfiguration"
EndSection

Section "Device"
    Identifier "amdgpu"
    Driver "amdgpu"
EndSection

Section "Screen"
    Identifier "amd"
    Device "amdgpu"
EndSection
"#;

pub const XORG_NVIDIA_PATH: &str = "/etc/X11/xorg.conf.d/10-nvidia.conf";
pub const XORG_NVIDIA_CONTENT: &str = r#"
# generated by nvgs

Section "OutputClass"
    Identifier "nvidia"
    MatchDriver "nvidia-drm"
    Driver "nvidia"
"#;

pub const FORCE_COMP: &str = r#"    Option "ForceCompositionPipeline" "true""#;
pub const COOLBITS: &str = r#"    Option "Coolbits" "{}""#;

pub const MODESET_PATH: &str = "/etc/modprobe.d/nvidia.conf";
pub const MODESET_CONTENT: &str = r#"
# generated by nvgs

options nvidia-drm modeset=1
options nvidia NVreg_UsePageAttributeTable=1 NVreg_InitializeSystemMemoryAllocations=0
"#;
pub const MODESET_CURRENT_CONTENT: &str = r#"
# generated by nvgs

options nvidia-current-drm modeset=1
options nvidia-current NVreg_UsePageAttributeTable=1 NVreg_InitializeSystemMemoryAllocations=0
"#;
pub const MODESET_RTD3: &str = r#"
# generated by nvgs

options nvidia-drm modeset=1
options nvidia "NVreg_DynamicPowerManagement=0x0{}"
options nvidia NVreg_UsePageAttributeTable=1 NVreg_InitializeSystemMemoryAllocations=0
"#;
pub const MODESET_CURRENT_RTD3: &str = r#"
# generated by nvgs

options nvidia-current-drm modeset=1
options nvidia-current "NVreg_DynamicPowerManagement=0x0{}"
options nvidia-current NVreg_UsePageAttributeTable=1 NVreg_InitializeSystemMemoryAllocations=0
"#;

pub const SDDM_XSETUP_PATH: &str = "/usr/share/sddm/scripts/Xsetup";
pub const SDDM_XSETUP_CONTENT: &str = r#"
#!/bin/sh

# Xsetup - run as root before the login dialog appears
"#;

pub const LIGHTDM_SCRIPT_PATH: &str = "/etc/lightdm/nvidia.sh";
pub const LIGHTDM_CONFIG_PATH: &str = "/etc/lightdm/lightdm.conf.d/20-nvidia.conf";
pub const LIGHTDM_CONFIG_CONTENT: &str = r#"
# generated by nvgs

[Seat:*]
display-setup-script=/etc/lightdm/nvidia.sh
"#;

pub const NVIDIA_XRANDR_SCRIPT: &str = r#"
#!/bin/sh

# generated by nvgs
current=""

xrandr --setprovideroutputsource "{}" NVIDIA-0
xrandr --auto

for next in $(xrandr --listmonitors | grep -E " *[0-9]+:.*" | cut -d" " -f6); do
  [ -z "$current" ] && current=$next && continue
  xrandr --output "$current" --auto --output "$next" --auto --right-of "$current"
  current=$next
done
"#;

pub const MODES: [&str; 3] = ["integrated", "hybrid", "nvidia"];
pub const SUPPORTED_DISPLAY_MANAGERS: [&str; 4] = ["gdm", "gdm3", "sddm", "lightdm"];
pub const RTD3_MODES: [u16; 4] = [0, 1, 2, 3];